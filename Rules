#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

preprocess do
end

# [{ width: 960, quality: 85 }, { width: 640, quality: 85 }].each do |params|
#   rep = "#{params[:width]}".to_sym
#   compile "/photos/*", rep: rep do
#     filter :resize_image, params if item[:extension] == "jpg"
#   end
#
#   route "/photos/*", rep: rep do
#     "/photos/#{rep}x" + item.identifier[7..-2] + ".jpg" if item[:extension] == "jpg"
#   end
# end

compile "/photos/*" do
end

route "/photos/*" do
end

compile 'sitemap' do
  filter :erb
end

compile '/favicon/*' do
end

compile "/trips/*" do
  if item[:extension] == "md"
    filter :convert_image_markup
    filter :kramdown
    filter :typogruby
    layout "trip"
    filter :imagesize
  end
end

compile "/feed" do
  filter :erb
  filter :absolute_urls
end

compile %r{/resources/(css|js)/*} do
end

compile "/resources/*" do
  unless item.binary?
    filter :erb
    filter :rainpress if item[:extension] == "css"
    filter :uglify_js if item[:extension] == "js"
  end
end

compile "*" do
  unless item.binary?
    filter :erb
    filter :kramdown if item[:extension] == "md"
    filter :typogruby
    layout "page"
    filter :imagesize
  end
end


route 'sitemap' do
  item.identifier.chop + '.xml'
end

route 'robots' do
  item.identifier.chop + ".txt"
end

route '/favicon/*' do
  item.identifier.chop.gsub("favicon/", "") + "." + item[:extension]
end

route %r{/resources/(css|js)/*} do
end

route "/resources/*" do
  item.identifier.slice(10, item.identifier.length - 11) + "." + item[:extension]
end

route "*" do
  if ["gpx"].include?(item[:extension])
    # do nothing
  elsif item.binary? || ["css", "js"].include?(item[:extension])
    item.identifier.chop + (item[:extension].nil? ? "" : ("." + item[:extension]))
  else
    item.identifier + "index.html"
  end
end

layout "*", :erb
